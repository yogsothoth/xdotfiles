(in-package :stumpwm)
(require :swank)
(swank-loader:init)
(swank:create-server :port 4004
		     :style swank:*communication-style*
		     :dont-close t)


;; use emacs-client, not emacs
(defparameter *emacs-client-script* "/home/kafka/bin/ec")
(define-key *root-map* (kbd "e") (concat "exec " *emacs-client-script*))
(define-key *root-map* (kbd "C-e") (concat "exec " *emacs-client-script*))

;; use ansi-term instead of xterm
(defparameter *my-shell* (getenv "SHELL"))
(defparameter *emacs-client-bin* "/usr/local/bin/emacsclient")
(define-key *root-map* (kbd "c") (concat "exec " *emacs-client-bin* " -c -a \"\" -e '(ansi-term \"" *my-shell* "\")'"))
(define-key *root-map* (kbd "C-c") (concat "exec " *emacs-client-bin* " -c -a \"\" -e '(ansi-term \"" *my-shell* "\")'"))

;; volume up and volume down
(define-key *root-map* (kbd "XF86AudioRaiseVolume") "exec mixer vol +5:+5")
(define-key *root-map* (kbd "XF86AudioLowerVolume") "exec mixer vol -5:-5")
(define-key *root-map* (kbd "XF86AudioMute") "exec mixer vol 0:0")

;; mode-line
;; refresh every second
(setf *mode-line-timeout* 1)

;; date and time | windows list
(setf *screen-mode-line-format* (list '(:eval
					(cl-ppcre:regex-replace-all "(\\n*$)"
					 (run-shell-command "date +'%a %d-%m-%Y %H:%M'" t) ""))
				      " | " "%g" " | "
				      '(:eval (window-name (current-window)))))
;; toggle mode-line
(stumpwm:toggle-mode-line (stumpwm:current-screen)
                          (stumpwm:current-head))
(setf (stumpwm:group-name (stumpwm::find-group (stumpwm:current-screen) "Default")) "main")
(stumpwm:add-group (stumpwm:current-screen) "mail")
(stumpwm:add-group (stumpwm:current-screen) "shell")
